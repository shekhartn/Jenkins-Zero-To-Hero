pipeline {
tools {
    dockerTool 'Docker'
}
  agent {
        docker {
            image 'maven:3.9.4-eclipse-temurin-17'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
            reuseNode true
        }
    }

  environment {
    SONAR_URL = "http://107.23.36.39:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "shekhartn"
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'Checking out the repository...'
        checkout scm
        // Uncomment the line below if using real repository
        // git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
        sh 'echo passed'
      }
    }

    stage('Build and Test') {
      steps {
        echo 'Building the project and running tests...'
        sh '''
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        echo 'Running SonarQube analysis...'
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=${SONAR_AUTH_TOKEN} \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }
    stage('Install Docker CLI') {
      steps {
        sh '''
          apt-get update
          apt-get install -y docker.io
          docker --version
        '''
      }
    }
    stage('Check Docker') {
            steps {
                sh 'whoami'
                sh 'docker --version'
            }
        }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "shekhart/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        echo "Building and pushing Docker image: ${DOCKER_IMAGE}"
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            docker push ${DOCKER_IMAGE}
            docker logout
          '''
        }
      }
    }

stage('Git SCM Checkout') {
      steps {
        checkout scm
      }
    }
    stage('Update Deployment File') {
      steps {
        echo 'Updating Kubernetes deployment file...'
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "shekharthr@gmail.com"
            git config user.name "Shekhar T"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
